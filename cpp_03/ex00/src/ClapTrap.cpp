/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ClapTrap.cpp                                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: badal-la <marvin@42.fr>                    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/09 13:29:05 by badal-la          #+#    #+#             */
/*   Updated: 2025/07/09 13:56:37 by badal-la         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../include/ClapTrap.hpp"
#include <iostream>

/* -------------------------------------------------------------------------- */
/*                            Canonical (mandatory)                           */
/* -------------------------------------------------------------------------- */

/* --------------------------- Default Constructor -------------------------- */

ClapTrap::ClapTrap( std::string name ) :
	_name(name),
	_hit_p(10),
	_energy_p(10),
	_attack_d(0)
{}

/* ------------------------ Assignation operator copy ----------------------- */

ClapTrap&	ClapTrap::operator=( const ClapTrap& other )
{
	if ( this != &other )
		// assign values here like this->_value = other._value;
	return ( *this );
}

/* ---------------------------- Copy constructor ---------------------------- */

ClapTrap::ClapTrap( const ClapTrap& other )
{
	*this = other;
}

/* ------------------------------- Destructor ------------------------------- */

ClapTrap::~ClapTrap( void )
{}

/* -------------------------------------------------------------------------- */
/*                                not mandatory                               */
/* -------------------------------------------------------------------------- */

/* ------------------------------- Constructor ------------------------------ */
/* --------------------------------- getters -------------------------------- */
/* --------------------------------- setters -------------------------------- */
/* --------------------------------- Methods -------------------------------- */

void attack(const std::string& target)
{
	
}

/* -------------------------------------------------------------------------- */
/*                                Outside class                               */
/* -------------------------------------------------------------------------- */
